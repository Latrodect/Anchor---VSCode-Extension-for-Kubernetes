(()=>{"use strict";var e={970:function(e,n,o){var t=this&&this.__createBinding||(Object.create?function(e,n,o,t){void 0===t&&(t=o);var r=Object.getOwnPropertyDescriptor(n,o);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[o]}}),Object.defineProperty(e,t,r)}:function(e,n,o,t){void 0===t&&(t=o),e[t]=n[o]}),r=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&t(n,e,o);return r(n,e),n},s=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))((function(r,i){function s(e){try{c(t.next(e))}catch(e){i(e)}}function a(e){try{c(t.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?r(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((t=t.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.generateDockerComposeYaml=void 0;const a=i(o(496)),c=i(o(147)),l=i(o(17));function d(e){return s(this,void 0,void 0,(function*(){if(!a.workspace.workspaceFolders)return void a.window.showErrorMessage("No workspace is open.");const e=yield a.window.showInputBox({prompt:"How many service do you want to use:",placeHolder:"Example Usage: 6"});if(!e||""===e.trim())return void a.window.showErrorMessage("Please provide how many service do you have.");const n=parseInt(e,10);if(Number.isNaN(n)||n<=0)return void a.window.showErrorMessage("Please provide a valid positive number of services.");n>=150&&a.window.showWarningMessage("Too many services. Extension can be crash and generating your files takes too much time!");let o=[],t=[];for(let r=0;r<n;r++){const n=yield a.window.showInputBox({prompt:"Service Information:",placeHolder:"Example Usage: frontend(Service Name), 8000(Service Port)"});if(!n||""===e.trim())return void a.window.showErrorMessage("Please provide your service information.");const r=p(n.split(",").map((e=>e.trim())));if(2!==r.length)return void a.window.showErrorMessage('Please provide service information in the correct format: "Service Name, Service Port".');let i=yield a.window.showInputBox({prompt:"Specify Environment Variables:",placeHolder:"Example Usage: mongo_host: 127.0.0.1, mongo_port: 4000, ..."});i&&""!==i.trim()||(a.window.showInformationMessage("Default item setted to environment variables."),i="env_var=default");const s=p(i.split(",").map((e=>e.trim()))).map((e=>`- ${e}=${process.env[e]||"default"}`));o.push(r),t.push(s)}const r=a.Uri.joinPath(a.workspace.workspaceFolders[0].uri,"docker_compose");c.mkdirSync(r.fsPath,{recursive:!0});const i={version:"3",services:{}};for(let e=0;e<o.length;e++){const[n,r]=o[e],s=t[e].map((e=>`${e}`)).join("\n      ");i.services[n]={build:{context:`./path/to/${n}`,dockerfile:"Dockerfile"},ports:[`${r}:${r}`],volumes:[`./path/to/${n}:/app/src/${n}`],environment:[s]}}const d=`\nversion: '${i.version}'\nservices:\n${Object.entries(i.services).map((([e,n])=>`  \n  ${e}:\n    build:\n      context: ${n.build.context}\n      dockerfile: ${n.build.dockerfile}\n    ports:\n      - "${n.ports[0]}"\n    volumes:\n      - "${n.volumes[0]}"\n    environment:\n      ${n.environment[0]}`)).join("\n")}`,u=l.join(r.fsPath,"docker-compose.yaml");if(yield function(e,n){return s(this,void 0,void 0,(function*(){const o=l.dirname(e);yield c.promises.mkdir(o,{recursive:!0}),yield c.promises.writeFile(e,n)}))}(u,d),!0===a.workspace.getConfiguration("compose-core").get("dockerComposeAutorun")){console.log("Running Docker Compose...");const e=r.fsPath,n=a.window.createTerminal({name:"Cmd in Workspace",cwd:e});n.sendText("docker compose up docker-compose.yaml"),n.show()}}))}function p(e){return e.map((e=>e.replace(/ +/g,"_")))}n.generateDockerComposeYaml=d,e.exports={generateDockerComposeYaml:d}},318:function(e,n,o){var t=this&&this.__createBinding||(Object.create?function(e,n,o,t){void 0===t&&(t=o);var r=Object.getOwnPropertyDescriptor(n,o);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[o]}}),Object.defineProperty(e,t,r)}:function(e,n,o,t){void 0===t&&(t=o),e[t]=n[o]}),r=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&t(n,e,o);return r(n,e),n},s=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))((function(r,i){function s(e){try{c(t.next(e))}catch(e){i(e)}}function a(e){try{c(t.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?r(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((t=t.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.generateDockerFiles=void 0;const a=i(o(496)),c=i(o(147)),l=i(o(17));function d(e,n){return s(this,void 0,void 0,(function*(){const o=l.dirname(e);yield c.promises.mkdir(o,{recursive:!0}),yield c.promises.writeFile(e,n)}))}function p(e,n){const o=l.join(e,n);try{if(c.statSync(o).isDirectory())return o}catch(e){a.window.showWarningMessage("Folder does not exist.")}}function u(e){return e.map((e=>e.replace(/ +/g,"_")))}n.generateDockerFiles=function(){return s(this,void 0,void 0,(function*(){if(!a.workspace.workspaceFolders)return void a.window.showErrorMessage("No workspace is open.");const e=yield a.window.showInputBox({prompt:"Root of your project:",placeHolder:"Example Usage: D:/MyProject/src"}),n=yield a.window.showInputBox({prompt:"Your Apps:",placeHolder:"Example Usage(application folder names): frontned, backend, sync"});if(!n)return void a.window.showWarningMessage("Please specify at least one application path.");if(!e)return void a.window.showWarningMessage("Please provide root path.");const o=a.Uri.joinPath(a.workspace.workspaceFolders[0].uri,"docker");c.mkdirSync(o.fsPath,{recursive:!0});const t=a.Uri.joinPath(a.workspace.workspaceFolders[0].uri,"scripts");c.mkdirSync(t.fsPath,{recursive:!0});const r=u(n.split(",").map((e=>"../docker/"+e.trim()+"/Dockerfile"))),i=`\n#!/bin/bash\n\n# Define the applications and their Dockerfile paths\nAPPLICATIONS=(${n})\nDOCKERFILES=("${r}")\n\n# Loop through each application and build the Docker image\nfor ((i=0; i<\${#APPLICATIONS[@]}; i++)); do\n    APP_NAME="\${APPLICATIONS[$i]}"\n    DOCKERFILE="\${DOCKERFILES[$i]}"\n    echo "Building Docker image for $APP_NAME..."\n    \n    # Check if the Dockerfile exists\n    if [ ! -f "$DOCKERFILE" ]; then\n        echo "Dockerfile not found for $APP_NAME."\n        continue\n    fi\n    \n    # Build the Docker image\n    docker build -t "$APP_NAME:latest" -f "$DOCKERFILE" .\n    \n    echo "Docker image for $APP_NAME built."\n    echo\ndone\n\necho "All Docker images built."\n`,s=l.join(t.fsPath,"docker_build_image.bash");yield d(s,i);const f=u(n.split(",").map((e=>e.trim())));for(const n of f){const t=a.Uri.joinPath(o,n);c.mkdirSync(t.fsPath,{recursive:!0});const r=p(e,n);if(r){const e=`\n# Use a base image\nFROM node:14\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Install dependencies\nRUN npm install\n\n# Copy the rest of the application code to the container\nCOPY ${r} ./src/${n}\n\n# Expose a port (if needed)\nEXPOSE 3000\n\n# Specify the command to run when the container starts\nCMD ["npm run start"]\n                                    `,o=l.join(t.fsPath,"Dockerfile");yield d(o,e)}}}))}},205:function(e,n,o){var t=this&&this.__createBinding||(Object.create?function(e,n,o,t){void 0===t&&(t=o);var r=Object.getOwnPropertyDescriptor(n,o);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[o]}}),Object.defineProperty(e,t,r)}:function(e,n,o,t){void 0===t&&(t=o),e[t]=n[o]}),r=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&t(n,e,o);return r(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.generateInlineCommands=void 0;const s=i(o(496)),a=o(187);n.generateInlineCommands=function(){const e=s.window.activeTextEditor;e?(e.selection.active.line,(0,a.generateInlineComments)(),s.window.showInformationMessage("Inline comment added.")):s.window.showErrorMessage("No active editor found. Please open the page you want to run.")}},873:function(e,n,o){var t=this&&this.__createBinding||(Object.create?function(e,n,o,t){void 0===t&&(t=o);var r=Object.getOwnPropertyDescriptor(n,o);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[o]}}),Object.defineProperty(e,t,r)}:function(e,n,o,t){void 0===t&&(t=o),e[t]=n[o]}),r=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&t(n,e,o);return r(n,e),n},s=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))((function(r,i){function s(e){try{c(t.next(e))}catch(e){i(e)}}function a(e){try{c(t.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?r(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((t=t.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.generateKubernetesFiles=void 0;const a=i(o(496)),c=i(o(147)),l=i(o(17));function d(e,n){return s(this,void 0,void 0,(function*(){const o=l.dirname(e);yield c.promises.mkdir(o,{recursive:!0}),yield c.promises.writeFile(e,n)}))}function p(e){return e.map((e=>e.replace(/ +/g,"_")))}n.generateKubernetesFiles=function(){return s(this,void 0,void 0,(function*(){if(!a.workspace.workspaceFolders)return void a.window.showErrorMessage("No workspace is open.");const e=yield a.window.showInputBox({prompt:"Your Namespace:",placeHolder:"Example: my-application"});if(!e)return void a.window.showWarningMessage("Please specify a namespace.");const n=p([e]),o=yield a.window.showInputBox({prompt:"Your Deployment Files:",placeHolder:"Example: frontend, backend, redis "});if(!o)return void a.window.showWarningMessage("Please specify atleast one deployment name.");const t=p(o.split(",").map((e=>e.trim()))),r=yield a.window.showInputBox({prompt:"Your Jobs:",placeHolder:"Example: collector, pickle (Give blank if you dont have job."});r||a.window.showInformationMessage("Jobs Folder not created.");const i=a.Uri.joinPath(a.workspace.workspaceFolders[0].uri,"kubernetes");c.mkdirSync(i.fsPath,{recursive:!0});for(const e of t){const n=a.Uri.joinPath(i,`${e}-service`);c.mkdirSync(n.fsPath,{recursive:!0})}const u=a.Uri.joinPath(i,"configmaps");c.mkdirSync(u.fsPath,{recursive:!0});const f=a.Uri.joinPath(i,"secrets");c.mkdirSync(f.fsPath,{recursive:!0});const m=`\napiVersion: v1\nkind: Namespace\nmetadata:\n  name:\n   ${n}`;c.writeFileSync(l.join(i.fsPath,"namespace.yaml"),m);const h=t.map((e=>s(this,void 0,void 0,(function*(){const o=a.Uri.joinPath(i,`${e}-service`),t=`\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ${e}\n  namespace: ${n}\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      containers:\n        - name: my-container\n          image: nginx:latest\n          ports:\n            - containerPort: 80\n          `;yield d(l.join(o.fsPath,`${e}-deployment.yaml`),t);const r=`\napiVersion: v1\nkind: Service\nmetadata:\nname: ${e}-service\nnamespace: ${n}\nspec:\nselector:\n  app: ${e}\nports:\n  - protocol: TCP\n    port: 80\n    targetPort: 8080\n          `;yield d(l.join(o.fsPath,`${e}-service.yaml`),r);const s=`\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\nname: ${e}-ingress\nnamespace: ${n}\nspec:\nrules:\n  - host: ${e}.com\n    http:\n      paths:\n        - path: /\n          pathType: Prefix\n          backend:\n            service:\n              name: ${e}-service\n              port:\n                number: 80\n          `;yield d(l.join(o.fsPath,`${e}-ingress.yaml`),s)})))),v=`\napiVersion: v1\nkind: Secret\nmetadata:\n  name: application-secret\n  namespace: ${n}\ntype: Opaque\ndata:\n  username: ${Buffer.from("my-username").toString("base64")}\n  password: ${Buffer.from("my-password").toString("base64")}\n          `;yield d(l.join(f.fsPath,"application-secret.yaml"),v);const w=`\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: application-configmap\n  namespace: ${n}\ndata:\n  config.properties: |\n    key1=value1\n    key2=value2\n            `;if(yield d(l.join(u.fsPath,"application-configmap.yaml"),w),yield Promise.all(h),a.window.showInformationMessage(`${t.length} deployment, service, and ingress files generated successfully.`),r){const e=a.Uri.joinPath(i,"jobs");c.mkdirSync(e.fsPath,{recursive:!0});const n=p(r.split(",").map((e=>e.trim()))),o=n.map((n=>s(this,void 0,void 0,(function*(){const o=`\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: ${n}\nspec:\n  completions: 1\n  template:\n    metadata:\n      name: ${n}-pod\n    spec:\n      containers:\n        - name: ${n}-container\n          image: nginx\n      restartPolicy: Never\n  \n        `;yield d(l.join(e.fsPath,`${n}-job.yaml`),o)}))));yield Promise.all(o),a.window.showInformationMessage(`${n.length} deployment, service, and ingress files generated successfully.`)}}))}},112:function(e,n,o){var t=this&&this.__createBinding||(Object.create?function(e,n,o,t){void 0===t&&(t=o);var r=Object.getOwnPropertyDescriptor(n,o);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[o]}}),Object.defineProperty(e,t,r)}:function(e,n,o,t){void 0===t&&(t=o),e[t]=n[o]}),r=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&t(n,e,o);return r(n,e),n},s=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))((function(r,i){function s(e){try{c(t.next(e))}catch(e){i(e)}}function a(e){try{c(t.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?r(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((t=t.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.deactivate=n.activate=void 0;const a=i(o(496)),c=o(205),l=o(318),d=o(873),p=o(970);function u(){return s(this,void 0,void 0,(function*(){const e=a.window.createWebviewPanel("backdoorUI","Backdoor UI",a.ViewColumn.One,{});var n,o;e.webview.html=(n=e.webview,null===(o=a.extensions.getExtension("Latrodect.compose-core"))||void 0===o||o.extensionPath,`\n        <!DOCTYPE html>\n        <html lang="en">\n        <head>\n            <meta charset="UTF-8">\n            <meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src ${n.cspSource} 'unsafe-inline'; script-src ${n.cspSource} 'unsafe-inline' 'unsafe-eval';">\n            <meta name="viewport" content="width=device-width, initial-scale=1.0">\n            <title>Backdoor Code Reviewer</title>\n        </head>\n        <body>\n            <div style="display:flex;">\n            <h1>Backdoor Code Reviewer</h1>\n            </div>\n            <p style="color:white;"> Backdoor is a free code reviewer assistant. It helps developers with AI support, increases code quality with highlighter and linter features.<p>\n            <br>\n            <hr>\n            <h2>How to Generate docker-compose.yaml File</h2>\n            <p style="color:white;"> If autorun enabled, make sure <stron>docker compose</strong> setup correctly. <p>\n            <p style="color:white;"> Type CTRL + SHIFT + P and select <strong>Backdoor Docker Compose: Generate Docker Compose YAML</strong>. Provide how many services do you have. <p>\n            <p style="color:white;"> Type your service name and port. After that step specify your environment variables. <p>\n            <p style="color:white;"> Apply this steps for each service. <p>\n            <p style="color:white;"> Your <strong>docker-compose.yaml</strong> will be created. Happy coding !!! <p>\n\n            <hr>\n\n            <h2>How to Generate Docker Files</h2>\n            <p style="color:white;"> Type CTRL + SHIFT + P and select <strong>Backdoor Docker: Generate Docker files</strong>. Provide information about root of your project. <p>\n            <p style="color:white;"> Type your application names which exist on your root.  <p>\n            <p style="color:white;"> Your <strong>Dockerfiles</strong> will be created and we create a bash script for you. Happy building !!! <p>\n\n            <hr>\n\n            <h2>How to Generate Kubernetes Files</h2>\n            <p style="color:white;"> Type CTRL + SHIFT + P and select <strong>Backdoor Kubernetes: Generate K8S files</strong>.  <p>\n            <p style="color:white;"> Provide information about your services.  <p>\n            <p style="color:white;"> Your <strong>k8s yaml</strong> and <strong>folder structure</strong> will be created. Happy deployment !!! <p>\n            <script src="${n.asWebviewUri(a.Uri.file(__dirname+"/script.js"))}"><\/script>\n        </body>\n        </html>\n    `)}))}n.activate=function(e){console.log("Backdoor extension is now active."),a.window.showInformationMessage("Important: Use CTRL + i for open extension UI.");const n=a.workspace.getConfiguration("compose-core").get("dockerComposeAutorun");e.subscriptions.push(a.commands.registerCommand("compose-core.generateInlineCommands",c.generateInlineCommands),a.commands.registerCommand("compose-core.generateDockerFiles",l.generateDockerFiles),a.commands.registerCommand("compose-core.composeCoreDashboardInit",u),a.commands.registerCommand("compose-core.generateKubernetesFiles",d.generateKubernetesFiles),a.commands.registerCommand("compose-core.generateDockerComposeYaml",(()=>s(this,void 0,void 0,(function*(){"boolean"==typeof n?yield(0,p.generateDockerComposeYaml)(n):a.window.showErrorMessage("Invalid value for dockerComposeAutorun.")})))))},n.deactivate=function(){console.log("Backdoor Code Reviewer extension is now deactivated.")}},187:function(e,n,o){var t=this&&this.__createBinding||(Object.create?function(e,n,o,t){void 0===t&&(t=o);var r=Object.getOwnPropertyDescriptor(n,o);r&&!("get"in r?!n.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return n[o]}}),Object.defineProperty(e,t,r)}:function(e,n,o,t){void 0===t&&(t=o),e[t]=n[o]}),r=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&t(n,e,o);return r(n,e),n},s=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))((function(r,i){function s(e){try{c(t.next(e))}catch(e){i(e)}}function a(e){try{c(t.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?r(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(s,a)}c((t=t.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.generateInlineComments=void 0;const a=i(o(496));n.generateInlineComments=function(){return s(this,void 0,void 0,(function*(){const e=a.window.activeTextEditor;if(!e)return void a.window.showErrorMessage("No active editor found.");const n=function(e){const n=e.selection;if(!n.isEmpty)return e.document.getText(n)}(e);n?function(e,n){const o=e.selection.end;e.edit((e=>{e.insert(o,"\n// Generated Comment: Axios will be added soon.")})),a.window.showInformationMessage("Comment generated and inserted.")}(e):a.window.showInformationMessage("No code is selected.")}))}},496:e=>{e.exports=require("vscode")},147:e=>{e.exports=require("fs")},17:e=>{e.exports=require("path")}},n={},o=function o(t){var r=n[t];if(void 0!==r)return r.exports;var i=n[t]={exports:{}};return e[t].call(i.exports,i,i.exports,o),i.exports}(112);module.exports=o})();